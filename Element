package Programming2;

import java.util.ArrayList;
import java.util.Scanner;

public class Element {
  public static void main(String[] args)
  {
    try (Scanner sc = new Scanner(System.in))
    {
      System.out.print("집합 A 입력: ");
      String inputA = sc.nextLine();
      if(inputA.equals("-1"))
      {
        return;
      }
      ArrayList<Character> listA = convertToList(inputA);
      // -1을 입력시 조건문 종료후 listA 값 반환
      System.out.print("집합 B입력: ");
      String inputB = sc.nextLine();
      if(inputB.equals("-1"))
      {
        return;
      }
      ArrayList<Character> listB= convertToList(inputB);
      // -1 입력시 조건문 종료 후 listB 값 반환.

      ArrayList<Character> unionList = union(listA, listB);
      ArrayList<Character> intersectionList = intersection(listA, listB);
      ArrayList<Character> relativeComplementList = relativeComplement(listA, listB);


      System.out.print("합집합: <" + unionList + " >");
      System.out.print("교집합: <" + intersectionList + " >");
      System.out.print("차집합: <" + relativeComplementList + " >");
      System.out.print("계속하려면 아무 키나 누르십시오 . . .");
      //계산한 값을 출력 후 아무 키나 누를시 입력으로 다시 돌아감.
      }
    }
    catch(Exception e){
      System.out.println("오류 발생 : " + e.getMessage());
    }
  }
// 문자열을 ArrayList로 변환
private static ArrayList<Character> convertToList(String input) {
  ArrayList<Character> list = new ArrayList<>();
  for (char ch : input.toCharArray()) {
    if (!list.contains(ch)) { // 중복 제거
      list.add(ch);
    }
  }
  return list;
}

  private static String intersection(String input) {
    //입력 받은 배열을 서로 비교해 같은 문자가 있을 시 저장
    return  intersection;
  }

  private static String relativeComplement(String input) {
    //elementA에서 intersection에 저장된 문자와 같은 문자가 있을 경우 삭제시킴.
  }


}
